# Use the official Composer image to get Composer
FROM composer:1.9.3 AS composer

# Use the official WordPress image as the base for the application
FROM wordpress:6.2.2-php8.2-apache

# Copy Composer from the Composer image
COPY --from=composer /usr/bin/composer /usr/bin/composer

# Install Node.js, npm, and git
# We use NodeSource's setup script to install Node.js 18.x
RUN apt-get update && \
    apt-get install -y \
        curl \
        git \
        build-essential \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Verify installation
RUN node -v && npm -v && composer --version && php -v

# Set up the working directory and copy application files
#WORKDIR /var/www/html

# If you have custom scripts or configuration, copy them here
# COPY ./your-custom-scripts /path/in/container/
COPY ./wp-content/themes/base/composer.json /var/www/html/wp-content/themes/base/composer.json
COPY ./wp-content/themes/base/composer.lock /var/www/html/wp-content/themes/base/composer.lock
COPY ./wp-content/themes/base/package.json /var/www/html/wp-content/themes/base/package.json
COPY ./wp-content/themes/base/package-lock.json /var/www/html/wp-content/themes/base/package-lock.json


# Change directory to 'wp-content/themes/base'
WORKDIR /var/www/html/wp-content/themes/base

# Run Composer install
RUN composer install \
&& npm i \
&& npx selenium-standalone install

WORKDIR /var/www/html

# Expose the port the app runs on
#EXPOSE 80

# Default command for the container
#CMD ["apache2-foreground"]
